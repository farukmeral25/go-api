// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import (
	"github.com/swaggo/swag"
)

// @title           Go API
// @version         1.0
// @description     Go API örneği
// @termsOfService  http://swagger.io/terms/

// @contact.name   API Support
// @contact.url    http://www.swagger.io/support
// @contact.email  support@swagger.io

// @license.name  Apache 2.0
// @license.url   http://www.apache.org/licenses/LICENSE-2.0.html

// @host      localhost:8000
// @BasePath  /api

// @securityDefinitions.apikey BearerAuth
// @in header
// @name Authorization
// @description Type "Bearer" followed by a space and JWT token.

func init() {
	swag.Register(swag.Name, &s{})
}

type s struct{}

func (s *s) ReadDoc() string {
	return `{
		"swagger": "2.0",
		"info": {
			"description": "Go API örneği",
			"title": "Go API",
			"version": "1.0"
		},
		"host": "localhost:8000",
		"basePath": "/api",
		"paths": {
			"/auth/register": {
				"post": {
					"tags": ["auth"],
					"summary": "Kullanıcı kaydı",
					"description": "Yeni bir kullanıcı kaydı oluşturur",
					"consumes": ["application/json"],
					"produces": ["application/json"],
					"parameters": [{
						"in": "body",
						"name": "user",
						"description": "Kullanıcı bilgileri",
						"required": true,
						"schema": {
							"$ref": "#/definitions/RegisterRequest"
						}
					}],
					"responses": {
						"201": {
							"description": "Kullanıcı başarıyla oluşturuldu",
							"schema": {
								"$ref": "#/definitions/RegisterResponse"
							}
						},
						"400": {
							"description": "Geçersiz istek"
						},
						"500": {
							"description": "Sunucu hatası"
						}
					}
				}
			},
			"/auth/login": {
				"post": {
					"tags": ["auth"],
					"summary": "Kullanıcı girişi",
					"description": "Kullanıcı girişi yapar ve JWT token döner",
					"consumes": ["application/json"],
					"produces": ["application/json"],
					"parameters": [{
						"in": "body",
						"name": "credentials",
						"description": "Giriş bilgileri",
						"required": true,
						"schema": {
							"$ref": "#/definitions/LoginRequest"
						}
					}],
					"responses": {
						"200": {
							"description": "Giriş başarılı",
							"schema": {
								"$ref": "#/definitions/LoginResponse"
							}
						},
						"400": {
							"description": "Geçersiz istek"
						},
						"401": {
							"description": "Kullanıcı adı veya şifre hatalı"
						},
						"500": {
							"description": "Sunucu hatası"
						}
					}
				}
			}
		},
		"definitions": {
			"RegisterRequest": {
				"type": "object",
				"required": ["first_name", "last_name", "username", "password", "email"],
				"properties": {
					"first_name": {
						"type": "string",
						"example": "John"
					},
					"last_name": {
						"type": "string",
						"example": "Doe"
					},
					"username": {
						"type": "string",
						"example": "johndoe"
					},
					"password": {
						"type": "string",
						"example": "123456"
					},
					"email": {
						"type": "string",
						"example": "john@example.com"
					}
				}
			},
			"RegisterResponse": {
				"type": "object",
				"properties": {
					"status": {
						"type": "string",
						"example": "success"
					},
					"message": {
						"type": "string",
						"example": "Kullanıcı başarıyla oluşturuldu"
					},
					"data": {
						"$ref": "#/definitions/UserResponse"
					}
				}
			},
			"UserResponse": {
				"type": "object",
				"properties": {
					"id": {
						"type": "integer",
						"example": 4
					},
					"first_name": {
						"type": "string",
						"example": "John"
					},
					"last_name": {
						"type": "string",
						"example": "Doe"
					},
					"username": {
						"type": "string",
						"example": "johndoe"
					},
					"email": {
						"type": "string",
						"example": "john@example.com"
					},
					"created_at": {
						"type": "string",
						"format": "date-time",
						"example": "2025-04-07T20:44:02.0164201+03:00"
					},
					"updated_at": {
						"type": "string",
						"format": "date-time",
						"example": "2025-04-07T20:44:02.0164201+03:00"
					}
				}
			},
			"LoginRequest": {
				"type": "object",
				"required": ["username", "password"],
				"properties": {
					"username": {
						"type": "string",
						"example": "johndoe"
					},
					"password": {
						"type": "string",
						"example": "123456"
					}
				}
			},
			"LoginResponse": {
				"type": "object",
				"properties": {
					"status": {
						"type": "string",
						"example": "success"
					},
					"message": {
						"type": "string",
						"example": "Giriş başarılı"
					},
					"data": {
						"type": "object",
						"properties": {
							"token": {
								"type": "string",
								"example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c"
							}
						}
					}
				}
			}
		}
	}`
}
